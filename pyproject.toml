[tool.poetry]
name = "Client_API_VN"
version = "3.0.0b0"
description = "Python API to Biolovision API and applications using it."
authors = ["Daniel Thonon <d.thonon9@outlook.com>"]
repository = "https://github.com/dthonon/Client_API_VN"
documentation = "https://dthonon.github.io/Client_API_VN/"
readme = "README.md"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: POSIX :: Linux",
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]

packages = [
  { include = "biolovision", from = "src" },
  { include = "export_vn", from = "src" },
  { include = "schemas", from = "src" },
  { include = "update", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
alembic = ">=1.14"
apscheduler = "<4"
beautifulsoup4 = ">=4.12"
jinja2 = ">=3.1"
jsonschema = ">=4.23"
psutil = ">=6.1"
psycopg2-binary = ">=2.9.10"
pyproj = ">=3.7"
requests = ">=2.32"
requests-oauthlib = ">=2.0"
SQLAlchemy = "<2"
strictyaml = ">=1.7"
tabulate = ">=0.9"
toml = ">=0.10"
yappi = ">=1.6"

[tool.poetry.group.dev.dependencies]
deptry = ">=0.20"
mypy = ">=1.5"
pytest = ">=8"
pytest-cov = ">=5"
pytest-order = ">=1.3"
pre-commit = ">=4"
tox = ">=4"
types-requests = ">=2.32"
types-requests-oauthlib = ">=2"
types-setuptools = ">=75"
types-psutil = ">=6.1"
types-tabulate = ">=0.9"
types-beautifulsoup4 = ">=4.12"
types-pytz = ">=2024.2"
types-psycopg2 = ">=2.9"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.6"
mkdocs-material = ">=9"
mkdocstrings = { extras = ["python"], version = ">=0.26" }
Pygments = ">=2.18"

[tool.poetry.scripts]
transfer_vn = "export_vn.transfer_vn:run"
update_vn = "update.update_vn:run"
validate_vn = "schemas.validate:run"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src"]
ignore_errors = "True"
# disallow_untyped_defs = "True"
# disallow_any_unimported = "True"
# no_implicit_optional = "True"
# check_untyped_defs = "True"
# warn_return_any = "True"
# warn_unused_ignores = "True"
# show_error_codes = "True"


[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.ruff]
include = ["pyproject.toml", "src/*/*.py"]
target-version = "py312"
line-length = 120
fix = true
lint.select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
lint.ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
  # Exclusions ruff temporaires
  "A001",
  "A002",
  "B006",
  "B007",
  "B015",
  "B019",
  "C408",
  "C901",
  "F821",
  "RUF015",
  "S101",
  "S102",
  "S105",
  "S108",
  "S110",
  "S113",
  "S307",
  "S602",
  "S608",
  "S701",
  "S702",
  "SIM102",
  "SIM105",
  "SIM108",
  "SIM113",
  "SIM117",
  "SIM401",
  "TRY301",
  "TRY400",
  "UP031",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
