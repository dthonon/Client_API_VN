[tool.towncrier]
    package = ""
    package_dir = "src"
    filename = "CHANGELOG.rst"
    issue_format = "`#{issue} <https://github.com/dthonon/Client_API_VN/issues/{issue}>`_"

<<<<<<< HEAD
packages = [{ include = "src/biolovision" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
click = ">=8"
requests = ">=2.32"
types-requests = ">=2.32"
types-requests-oauthlib = ">=2"
types-setuptools = ">=75"

[tool.poetry.group.dev.dependencies]
deptry = ">=0.20"
mypy = ">=1.5"
pytest = ">=8"
pytest-cov = ">=5"
pre-commit = ">=4"
tox = ">=4"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.6"
mkdocs-material = ">=9"
mkdocstrings = { extras = ["python"], version = ">=0.26" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true
lint.select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
lint.ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
  # Exclusions temporaires
  "C901",
  "S113",
  "SIM108",
  "TRY400",
  "C408",
  "A002",
  "B019",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["client_api_vn"]


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
=======
>>>>>>> parent of 302ade3 (Initialisation environnement Poetry)
