# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = Client_API_VN
description = Python API to Biolovision API and applications using it
author = Daniel Thonon
author_email = d.thonon9@gmail.com
license = gpl3
url = https://github.com/dthonon/Client_API_VN
project_urls = 
    Documentation = https://client-api-vn.readthedocs.io/en/latest/
    BugTracker = https://github.com/dthonon/Client_API_VN/issues
long_description = file: README.rst
long_description_content_type=text/x-rst
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Operating System :: POSIX :: Linux
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Topic :: Scientific/Engineering :: Bio-Informatics

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.2a0,<3.3a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    alembic
    apscheduler==3.9.1.post1
    beautifulsoup4
    docutils
    jinja2
    jsonschema
    numpy
    psutil
    psycopg2-binary
    pyproj
    requests
    requests-oauthlib
    setuptools_scm
    SQLAlchemy<2
    strictyaml
    tabulate
    wheel
    towncrier
    xmltodict
    yappi
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

[options.packages.find]
where = src
exclude =
    tests

[options.package_data]
export_vn = 
    data/evn_template.yaml
    sql/create-vn-tables.sql
    locale/*/LC_MESSAGES/*.mo
schemas =
    *.json
    
[options.extras_require]
# Add here test requirements (semicolon/line-separated)
# <<< USELESS, see deps >>>


[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = export_vn.module:function
# For example:
# console_scripts =
#     fibonacci = export_vn.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension
console_scripts =
    transfer_vn = export_vn.transfer_vn:run
    update_vn = update.update_vn:run
    update_uuid = update.update_uuid:run
    validate = schemas.validate:run

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
# <<< COULD BE USELESS >>>
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --verbose
    --durations=10
norecursedirs =
    dist
    build
    .tox
testpaths = 
    tests
markers = 
    slow

[tox:tox]
minversion = 2.4
envlist = clean,cover,py39,py310,py311,flake8,docs
skip_missing_interpreters = True

[testenv]
setenv = TOXINIDIR = {toxinidir}
passenv =
    HOME
commands =
    pytest --cov {posargs}
# <<< COULD BE USELESS >>>
extras = 
    all
    install_requires
    tests_require
deps =
#     # DEPRECATION WARNING:
#     # The automatic creation of a `requirements.txt` file is deprecated.
#     # See `Dependency Management` in the docs for other options.
    -r{toxinidir}/requirements.txt
    codecov
    flake8
    mypy
    pytest
    pytest-order
    pytest-cov
whitelist_externals =
    rm

[testenv:clean]
deps = coverage
skip_install = True
commands = 
    coverage erase
    rm -f coverage.xml

[testenv:cover]
deps = 
    coverage
    codecov
passenv = CODECOV_TOKEN
skip_install = True
commands = 
    - coverage combine --append
    coverage xml --ignore-errors
    - codecov -X gcov

[testenv:flake8]
skip_install = True
changedir = {toxinidir}
deps = flake8
commands = flake8 setup.py src tests

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = 
    sphinx >2
    sphinx_rtd_theme
commands = python setup.py docs 

[coverage:run]
branch = True
concurrency = multiprocessing
parallel = True
source = 
    biolovision
    export_vn
    update

[coverage:paths]
source =
    src
    .tox/*/lib/*/site-packages

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise HTTPError
    raise NotImplementedError
    raise NotImplementedException
    raise StorePostgresqlException

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[pylama]
ignore = E0602

[pylama:pyflakes]
builtins = _

[pylama:pycodestyle]
max_line_length = 88

[pylama:pylint]
max_line_length = 88
disable = R

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
builtins = _
max-line-length = 120
extend-ignore =
    # See https://github.com/PyCQA/pycodestyle/issues/373
    E203,

[extract_messages]
output_file = src/export_vn/locale/export_vn.pot
input-dirs = src
copyright-holder = LPO Auvergne-Rh√¥ne-Alpes 

[init_catalog]
input_file = src/export_vn/locale/export_vn.pot
output_dir = src/export_vn/locale/
domain = export_vn

[update_catalog]
input_file = src/export_vn/locale/export_vn.pot
output_dir = src/export_vn/locale/
domain = export_vn
no-fuzzy-matching = 1

[compile_catalog]
directory = src/export_vn/locale/
domain = export_vn
statistics = 1

[mypy]
warn_return_any = True

[mypy-strictyaml]
ignore_missing_imports = True

[mypy-sqlalchemy]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True

[mypy-psycopg2.extensions]
ignore_missing_imports = True

[mypy-pyproj]
ignore_missing_imports = True

[mypy-requests_oauthlib]
ignore_missing_imports = True

[mypy-bs4]
ignore_missing_imports = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.2.1
package = export_vn
extensions =
    no_skeleton
    tox
